/********************************************************************************************
@author Bevis
@date 2018-09-02

********************************************************************************************/
#ifndef __BV_QUEUE_H__
#define __BV_QUEUE_H__

#include <bv_common.h>
typedef unsigned long BV_QUEUE_HANDLE;

/********************************************************************************************
@函数名称:
bv_queue_create

@函数功能:
创建队列

@函数参数:
----IN
ulItemSize:队列每个元素的大小
iQueueLength:队列的最大长度。如果输入为0，则认为队列长度没有限制，否则输入参数为队列最大长度。

@函数返回值
创建成功，返回队列句柄(非0值)
创建失败，返回0
/********************************************************************************************/
BV_QUEUE_HANDLE bv_queue_create(unsigned long ulItemSize, unsigned int uiQueueLength);

/********************************************************************************************
@函数名称:
bv_queue_destroy

@函数功能:
销毁队列

@函数参数:
----IN
queueHandle:队列句柄

@函数返回值
BV_SUCCESS:返回成功
其他值:失败
/********************************************************************************************/
BV_RETURN bv_queue_destroy(BV_QUEUE_HANDLE queueHandle);

/********************************************************************************************
@函数名称:
bv_queue_push

@函数功能:
向队列里添加item

@函数参数:
----IN
queueHandle:队列句柄
pvItem:添加的item

@函数返回值
BV_SUCCESS:返回成功
其他值:失败
/********************************************************************************************/
BV_RETURN bv_queue_push(BV_QUEUE_HANDLE queueHandle, void* pvItem);

/********************************************************************************************
@函数名称:
bv_queue_pop

@函数功能:
从队列里取出元素

@函数参数:
----IN
queueHandle:队列句柄
----OUT
pvItem:取出的item

@函数返回值
BV_SUCCESS:返回成功
其他值:失败
/********************************************************************************************/
BV_RETURN bv_queue_pop(BV_QUEUE_HANDLE queueHandle, void** ppvItem);

#endif //__BV_QUEUE_H__